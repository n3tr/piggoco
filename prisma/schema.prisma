// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid()) @db.VarChar(32)
  email String? @unique

  fbPsId String? @unique @db.VarChar(32)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wallets Wallet[]
}

model Wallet {
  id     String @id @default(cuid()) @db.VarChar(32)
  userId String @db.VarChar(32)
  name   String @default("default")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  categories  Category[]
  transactions Transaction[]
}

model Category {
  id       String  @id @default(cuid()) @db.VarChar(32)
  walletId String  @db.VarChar(32)
  slug     String  @db.VarChar(32)
  title    String? @db.VarChar(64)

  transactions Transaction[]
  wallet Wallet @relation(fields: [walletId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([walletId, slug])
}

model Transaction {
  id       String  @id @default(cuid()) @db.VarChar(32)
  walletId String  @db.VarChar(32)
  type     String  @db.VarChar(10)
  amount   Decimal
  title    String? @db.VarChar(256)

  categoryId String? @db.VarChar(32)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wallet Wallet @relation(fields: [walletId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  category Category? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  tags TransactionTag[]
}

model TransactionTag {
  transactionId String @db.VarChar(32)
  tag           String @db.VarChar(32)

  transaction Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)

  @@unique([transactionId, tag])
}
